{
  "Comment": "TRE Validate Bag Flow",
  "StartAt": "BagIt Checksum Validation",
  "States": {
    "BagIt Checksum Validation": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${arn_lambda_vb_bagit_checksum_validation}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "BagIt Checksum Validation Output Handler",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Format BagIt Checksum Function Error"
        }
      ]
    },
    "Format BagIt Checksum Function Error": {
      "Type": "Pass",
      "Next": "Slack Alert BagIt Checksum Validation Failed",
      "Parameters": {
        "Execution.$": "$$.Execution.Name",
        "StateMachine.$": "$$.StateMachine.Name",
        "ErrorType.$": "$$.State.Name",
        "ErrorMessage.$": "$.Cause"
      }
    },
    "Slack Alert BagIt Checksum Validation Failed": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "error",
          "ErrorMessage.$": "$.ErrorMessage",
          "Event": "BagIt Checksum Error"
        }
      },
      "Next": "BagIt Checksum Validation Failed"
    },
    "BagIt Checksum Validation Failed": {
      "Type": "Fail"
    },
    "BagIt Checksum Validation Output Handler": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.parameters.bagit-received.errors[0]",
              "IsPresent": true
            },
            {
              "Variable": "$.parameters.bagit-received.number-of-retries",
              "NumericLessThan": 3
            }
          ],
          "Comment": "(error) and (retry < 3)",
          "Next": "TDR SQS Retry BagIt"
        },
        {
          "And": [
            {
              "Not": {
                "Variable": "$.parameters.bagit-received.errors[0]",
                "IsPresent": true
              }
            },
            {
              "Variable": "$.parameters.bagit-received.number-of-retries",
              "NumericLessThan": 3
            }
          ],
          "Comment": "(not error) and (retry < 3)",
          "Next": "Files Checksum Validation"
        }
      ],
      "Default": "Format BagIt Checksum Error"
    },
    "Format BagIt Checksum Error": {
      "Type": "Pass",
      "Next": "Slack Alert BagIt Checksum Validation Failed",
      "Parameters": {
        "Execution.$": "$$.Execution.Name",
        "StateMachine.$": "$$.StateMachine.Name",
        "ErrorType.$": "$$.State.Name",
        "ErrorMessage.$": "$.parameters.bagit-received.errors"
      }
    },
    "TDR SQS Retry BagIt": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${url_tdr_sqs_retry}"
      },
      "Next": "Slack Alert TDR Retry BagIt",
      "ResultPath": null
    },
    "Slack Alert TDR Retry BagIt": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "warning",
          "ErrorMessage.$": "$.parameters.bagit-received.errors",
          "Event": "TDR BagIt Error"
        }
      },
      "End": true
    },
    "Files Checksum Validation": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${arn_lambda_vb_files_checksum_validation}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Files Checksum Validation Output Handler",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Format Files Checksum Function Error"
        }
      ]
    },
    "Format Files Checksum Function Error": {
      "Type": "Pass",
      "Next": "Slack Alert Files Checksum Validation Failed",
      "Parameters": {
        "Execution.$": "$$.Execution.Name",
        "StateMachine.$": "$$.StateMachine.Name",
        "ErrorType.$": "$$.State.Name",
        "ErrorMessage.$": "$.Cause"
      }
    },
    "Slack Alert Files Checksum Validation Failed": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "error",
          "ErrorMessage.$": "$.ErrorMessage",
          "Event": "File Checksum Error"
        }
      },
      "Next": "Files Checksum Validation Failed"
    },
    "Files Checksum Validation Output Handler": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Not": {
                "Variable": "$.parameters.bagit-validated.errors[0]",
                "IsPresent": true
              }
            },
            {
              "Variable": "$.parameters.bagit-validated.number-of-retries",
              "NumericLessThan": 3
            }
          ],
          "Comment": "(not error) and (retry < 3)",
          "Next": "SNS Publish"
        },
        {
          "And": [
            {
              "Variable": "$.parameters.bagit-validated.errors[0]",
              "IsPresent": true
            },
            {
              "Variable": "$.parameters.bagit-validated.number-of-retries",
              "NumericLessThan": 3
            }
          ],
          "Comment": "(error) and (retry < 3)",
          "Next": "TDR SQS Retry Files"
        }
      ],
      "Default": "Format Files Checksum Error"
    },
    "SNS Publish": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "MessageAttributes": {
          "environment": {
            "DataType": "String",
            "StringValue.$": "$.producer.environment"
          },
          "name": {
            "DataType": "String",
            "StringValue.$": "$.producer.name"
          },
          "process": {
            "DataType": "String",
            "StringValue.$": "$.producer.process"
          },
          "type": {
            "DataType": "String",
            "StringValue.$": "$.producer.type"
          },
          "event-name": {
            "DataType": "String",
            "StringValue.$": "$.producer.event-name"
          }
        },
        "Message.$": "$",
        "TopicArn": "${arn_sns_topic_validate_bag_out}"
      },
      "Next": "Slack Alert Completed Successfully"
    },
    "Slack Alert Completed Successfully": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "success",
          "Event": "Completed successfully"
        }
      },
      "End": true
    },
    "TDR SQS Retry Files": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${url_tdr_sqs_retry}"
      },
      "Next": "Slack Alert TDR Retry Files",
      "ResultPath": null
    },
    "Slack Alert TDR Retry Files": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "warning",
          "ErrorMessage.$": "$.parameters.bagit-validated.errors",
          "Event": "TDR Files Error"
        }
      },
      "End": true
    },
    "Format Files Checksum Error": {
      "Type": "Pass",
      "Next": "Slack Alert Files Checksum Validation Failed",
      "Parameters": {
        "Execution.$": "$$.Execution.Name",
        "StateMachine.$": "$$.StateMachine.Name",
        "ErrorType.$": "$$.State.Name",
        "ErrorMessage.$": "$.parameters.bagit-validated.errors"
      }
    },
    "Files Checksum Validation Failed": {
      "Type": "Fail"
    }
  }
}