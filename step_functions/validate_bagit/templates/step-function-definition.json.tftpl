{
  "Comment": "TRE Validate BagIt Flow",
  "StartAt": "BagIt Checksum Validation",
  "States": {
    "BagIt Checksum Validation": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${arn_lambda_vb_bagit_checksum_validation}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "BagIt Checksum Validation Output Handler",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Format BagIt Error Info"
        }
      ]
    },
    "Format BagIt Error Info": {
      "Type": "Pass",
      "Next": "BagIt Error -> Slack",
      "Parameters": {
        "Execution.$": "$$.Execution.Name",
        "StateMachine.$": "$$.StateMachine.Name",
        "ErrorType.$": "$$.State.Name",
        "ErrorMessage.$": "$.Cause"
      }
    },
    "BagIt Error -> Slack": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "error",
          "ErrorMessage.$": "$.Cause",
          "Event": "Lambda Error (BagIt)"
        }
      },
      "Next": "BagIt Error"
    },
    "BagIt Error": {
      "Type": "Fail"
    },
    "BagIt Unhandled Event -> Slack": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "error",
          "ErrorMessage.$": "$.producer.event-name",
          "Event": "Invalid event-name (BagIt)"
        }
      },
      "Next": "BagIt Checksum Unhandled Event"
    },
    "BagIt Checksum Unhandled Event": {
      "Type": "Fail"
    },
    "BagIt Checksum Validation Output Handler": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.producer.event-name",
          "StringEquals": "bagit-received",
          "Next": "Files Checksum Validation",
          "Comment": "bagit-received"
        },
        {
          "Variable": "$.producer.event-name ",
          "StringEquals": "bagit-validation-error",
          "Next": "SNS tre-internal",
          "Comment": "bagit-validation-error"
        }
      ],
      "Default": "Format BagIt Unhandled Event Info"
    },
    "Format BagIt Unhandled Event Info": {
      "Type": "Pass",
      "Next": "BagIt Unhandled Event -> Slack",
      "Parameters": {
        "Execution.$": "$$.Execution.Name",
        "StateMachine.$": "$$.StateMachine.Name",
        "ErrorType.$": "$$.State.Name",
        "ErrorMessage.$": "$.parameters.bagit-received.errors"
      }
    },
    "Files Checksum Validation": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${arn_lambda_vb_files_checksum_validation}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Files Checksum Validation Output Handler",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Format Files Checksum Function Error"
        }
      ]
    },
    "Format Files Checksum Function Error": {
      "Type": "Pass",
      "Next": "Files Lambda Error -> Slack",
      "Parameters": {
        "Execution.$": "$$.Execution.Name",
        "StateMachine.$": "$$.StateMachine.Name",
        "ErrorType.$": "$$.State.Name",
        "ErrorMessage.$": "$.Cause"
      }
    },
    "Files Lambda Error -> Slack": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "error",
          "ErrorMessage.$": "$.Cause",
          "Event": "Lambda Error (Files)"
        }
      },
      "Next": "Files Checksum Validation Failed"
    },
    "Files Checksum Validation Output Handler": {
      "Type": "Choice",
      "Choices": [
        {
          "Or": [
            {
              "Variable": "$.producer.event-name",
              "StringEquals": "bagit-validated"
            },
            {
              "Variable": "$.producer.event-name",
              "StringEquals": "bagit-validation-error"
            }
          ],
          "Comment": "bagit-validated or bagit-validation-error",
          "Next": "SNS tre-internal"
        }
      ],
      "Default": "Files Unhandled Event -> Slack"
    },
    "Files Unhandled Event -> Slack": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "error",
          "ErrorMessage.$": "$.producer.event-name",
          "Event": "Invalid event-name (Files)"
        }
      },
      "Next": "Files Checksum Unhandled Event"
    },
    "Files Checksum Unhandled Event": {
      "Type": "Fail"
    },
    "SNS tre-internal": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "MessageAttributes": {
          "environment": {
            "DataType": "String",
            "StringValue.$": "$.producer.environment"
          },
          "name": {
            "DataType": "String",
            "StringValue.$": "$.producer.name"
          },
          "process": {
            "DataType": "String",
            "StringValue.$": "$.producer.process"
          },
          "type": {
            "DataType": "String",
            "StringValue.$": "$.producer.type"
          },
          "event-name": {
            "DataType": "String",
            "StringValue.$": "$.producer.event-name"
          }
        },
        "Message.$": "$",
        "TopicArn": "${arn_sns_topic_validate_bagit_out}"
      },
      "Next": "Choice",
      "ResultPath": null
    },
    "Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.producer.event-name",
          "StringEquals": "bagit-validated",
          "Next": "bagit-validated -> Slack",
          "Comment": "bagit-validated"
        },
        {
          "Variable": "$.producer.event-name",
          "StringEquals": "bagit-validation-error",
          "Next": "bagit-validation-error -> Slack",
          "Comment": "bagit-validation-error"
        }
      ],
      "Default": "Unhandled Event -> Slack"
    },
    "Unhandled Event -> Slack": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "error",
          "ErrorMessage.$": "$.producer.event-name",
          "Event": "Invalid event-name (SNS tre-internal)"
        }
      },
      "Next": "Unhandled Event"
    },
    "bagit-validated -> Slack": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "success",
          "Event.$": "$.producer.event-name"
        }
      },
      "End": true
    },
    "Unhandled Event": {
      "Type": "Fail"
    },
    "Files Checksum Validation Failed": {
      "Type": "Fail"
    },
    "bagit-validation-error -> Slack": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${arn_sns_topic_tre_slack_alerts}",
        "Message": {
          "Execution.$": "$$.Execution.Name",
          "StateMachine.$": "$$.StateMachine.Name",
          "Status": "warning",
          "ErrorMessage.$": "$.parameters",
          "Event.$": "$.producer.event-name"
        }
      },
      "End": true
    }
  }
}