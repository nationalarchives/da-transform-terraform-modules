{
    "Comment": "State machine for the TE to process the BagIt package",
    "StartAt": "Choice",
    "States": {
      "Choice": {
        "Type": "Choice",
        "Choices": [
            {
            "Variable": "$.eventSourceARN",
            "StringMatches": "${tdr_trigger_queue_arn}",
            "Next": "TDRMessage"
            },
            {
            "Variable": "$.eventSourceARN",
            "StringMatches": "${editorial_retry_trigger_arn}",
            "Next": "EditorialRetryMessage"
            }
        ]
      },
      "TDRMessage": {
        "Type": "Pass",
        "Next": "BagIt checksum validation",
        "Parameters": {
            "body.$": "States.StringToJson($.body)"
        }
      },
      "BagIt checksum validation": {
        "Type": "Task",
        "Resource": "${bagit_checksum_lambda}",
        "Next": "Bagit validation error?",
        "Retry": [
          {
            "ErrorEquals": [
              "States.TaskFailed"
            ],
            "BackoffRate": 2,
            "IntervalSeconds": 1,
            "MaxAttempts": 3
          }
        ],
        "InputPath": "$.body"
      },
      "Files checksum validation": {
        "Type": "Task",
        "Resource": "${files_checksum_lambda}",
        "Next": "Files validation errors?",
        "Retry": [
          {
            "ErrorEquals": [
              "States.TaskFailed"
            ],
            "BackoffRate": 2,
            "IntervalSeconds": 1,
            "MaxAttempts": 3
          }
        ]
      },
      "RunJudgmentsParser": {
        "Type": "Task",
        "Resource": "${run_judgments_parser}",
        "Next": "EditorialIntegration",
        "Retry": [
          {
            "ErrorEquals": [
              "States.TaskFailed"
            ],
            "BackoffRate": 2,
            "IntervalSeconds": 1,
            "MaxAttempts": 3
          }
        ]
      },
      "EditorialIntegration": {
        "Type": "Task",
        "Resource": "${editorial_integration_lambda}",
        "Next": "Editorial SNS Publish",
        "Retry": [
          {
            "ErrorEquals": [
              "States.TaskFailed"
            ],
            "BackoffRate": 2,
            "IntervalSeconds": 1,
            "MaxAttempts": 3
          }
        ]
      },
      "Editorial SNS Publish": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sns:publish",
        "Parameters": {
          "Message.$": "$",
          "TopicArn": "${editorial_sns_topic_arn}"
        },
        "End": true,
        "InputPath": "$.editorial-output"
    },
      "Bagit validation error?": {
        "Type": "Choice",
        "Choices": [
          {
            "And": [
              {
                "Variable": "$.error",
                "BooleanEquals": true
              },
              {
                "Variable": "$.output-message.number-of-retries",
                "NumericLessThan": 3
              }
            ],
            "Next": "SendMessage to TDR for BagIt"
          },
          {
            "And": [
              {
                "Variable": "$.error",
                "BooleanEquals": false
              },
              {
                "Variable": "$.output-message.number-of-retries",
                "NumericLessThan": 3
              }
            ],
            "Next": "Files checksum validation"
          }
        ],
        "Default": "BagIt checksum failed"
      },
      "SendMessage to TDR for BagIt": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sqs:sendMessage",
        "Parameters": {
          "MessageBody.$": "$",
          "QueueUrl": "${tdr_sqs_queue_endpoint}"
        },
        "End": true,
        "InputPath": "$.output-message"
      },
      "Files validation errors?": {
        "Type": "Choice",
        "Choices": [
          {
            "And": [
              {
                "Variable": "$.error",
                "BooleanEquals": true
              },
              {
                "Variable": "$.output-message.number-of-retries",
                "NumericLessThan": 3
              }
            ],
            "Next": "SendMessage to TDR for files"
          },
          {
            "And": [
              {
                "Variable": "$.error",
                "BooleanEquals": false
              },
              {
                "Variable": "$.output-message.number-of-retries",
                "NumericLessThan": 3
              }
            ],
            "Next": "RunJudgmentsParser"
          }
        ],
        "Default": "Files checksum failed"
      },
      "EditorialRetryMessage": {
        "Type": "Pass",
        "Next": "EditorialIntegration",
        "Parameters": {
          "body.$": "States.StringToJson($.body)"
        }
      },
      "SendMessage to TDR for files": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sqs:sendMessage",
        "Parameters": {
          "MessageBody.$": "$",
          "QueueUrl": "${tdr_sqs_queue_endpoint}"
        },
        "End": true,
        "InputPath": "$.output-message"
      },
      "BagIt checksum failed": {
        "Type": "Fail"
      },
      "Files checksum failed": {
        "Type": "Fail"
      }
    }
  }